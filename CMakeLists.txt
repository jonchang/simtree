CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(SIMTREE C CXX)

SET(SIMTREE_VERSION 1.0)
SET(SIMTREE_VERSION_DATE 2016-28-01)

# Specify executable and source files
AUX_SOURCE_DIRECTORY(src SIMTREE_SRC)
ADD_EXECUTABLE(simtree ${SIMTREE_SRC})

# Specify flags according to compiler
IF(${CMAKE_CXX_COMPILER_ID} MATCHES Clang)
    SET(CMAKE_CXX_FLAGS "-g -Wall -Wextra -O3 -std=c++11 -stdlib=libc++")
    SET(CMAKE_EXE_LINKER_FLAGS "-stdlib=libc++")
ELSEIF(${CMAKE_CXX_COMPILER_ID} MATCHES GNU)
    IF(${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS 4.6.3)
        MESSAGE(FATAL_ERROR "GCC version must be >= 4.6.3")
    ELSEIF(${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS 4.7)
        SET(CMAKE_CXX_FLAGS "-g -Wall -Wextra -O3 -std=c++0x")
    ELSE()
        SET(CMAKE_CXX_FLAGS "-g -Wall -Wextra -O3 -std=c++11")
    ENDIF()
    FIND_PACKAGE(Threads REQUIRED)
    IF(Threads_FOUND)
        TARGET_LINK_LIBRARIES (simtree ${CMAKE_THREAD_LIBS_INIT})
    ENDIF()
ELSEIF(${CMAKE_CXX_COMPILER_ID} MATCHES MSVC)
    SET(CMAKE_CXX_FLAGS "/W4")
ENDIF()

# Provide SIMTREE version to the compiler
ADD_DEFINITIONS(-DSIMTREE_VERSION=\"${SIMTREE_VERSION}\")
ADD_DEFINITIONS(-DSIMTREE_VERSION_DATE=\"${SIMTREE_VERSION_DATE}\")

# Set Git commit id
EXECUTE_PROCESS(COMMAND "git" "rev-parse" "HEAD"
    OUTPUT_VARIABLE GIT_COMMIT_ID
    OUTPUT_STRIP_TRAILING_WHITESPACE)
ADD_DEFINITIONS(-DGIT_COMMIT_ID=\"${GIT_COMMIT_ID}\")

INSTALL(TARGETS simtree RUNTIME DESTINATION bin)
